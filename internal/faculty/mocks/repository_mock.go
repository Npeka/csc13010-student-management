// Code generated by MockGen. DO NOT EDIT.
// Source: internal/faculty/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/csc13010-student-management/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIFacultyRepository is a mock of IFacultyRepository interface.
type MockIFacultyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIFacultyRepositoryMockRecorder
}

// MockIFacultyRepositoryMockRecorder is the mock recorder for MockIFacultyRepository.
type MockIFacultyRepositoryMockRecorder struct {
	mock *MockIFacultyRepository
}

// NewMockIFacultyRepository creates a new mock instance.
func NewMockIFacultyRepository(ctrl *gomock.Controller) *MockIFacultyRepository {
	mock := &MockIFacultyRepository{ctrl: ctrl}
	mock.recorder = &MockIFacultyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFacultyRepository) EXPECT() *MockIFacultyRepositoryMockRecorder {
	return m.recorder
}

// CreateFaculty mocks base method.
func (m *MockIFacultyRepository) CreateFaculty(ctx context.Context, faculty *models.Faculty) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFaculty", ctx, faculty)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFaculty indicates an expected call of CreateFaculty.
func (mr *MockIFacultyRepositoryMockRecorder) CreateFaculty(ctx, faculty interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFaculty", reflect.TypeOf((*MockIFacultyRepository)(nil).CreateFaculty), ctx, faculty)
}

// DeleteFaculty mocks base method.
func (m *MockIFacultyRepository) DeleteFaculty(ctx context.Context, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFaculty", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFaculty indicates an expected call of DeleteFaculty.
func (mr *MockIFacultyRepositoryMockRecorder) DeleteFaculty(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFaculty", reflect.TypeOf((*MockIFacultyRepository)(nil).DeleteFaculty), ctx, id)
}

// GetFaculties mocks base method.
func (m *MockIFacultyRepository) GetFaculties(ctx context.Context) ([]*models.Faculty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFaculties", ctx)
	ret0, _ := ret[0].([]*models.Faculty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFaculties indicates an expected call of GetFaculties.
func (mr *MockIFacultyRepositoryMockRecorder) GetFaculties(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFaculties", reflect.TypeOf((*MockIFacultyRepository)(nil).GetFaculties), ctx)
}

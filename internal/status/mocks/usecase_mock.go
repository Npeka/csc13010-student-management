// Code generated by MockGen. DO NOT EDIT.
// Source: internal/status/usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/csc13010-student-management/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStatusUsecase is a mock of IStatusUsecase interface.
type MockIStatusUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIStatusUsecaseMockRecorder
}

// MockIStatusUsecaseMockRecorder is the mock recorder for MockIStatusUsecase.
type MockIStatusUsecaseMockRecorder struct {
	mock *MockIStatusUsecase
}

// NewMockIStatusUsecase creates a new mock instance.
func NewMockIStatusUsecase(ctrl *gomock.Controller) *MockIStatusUsecase {
	mock := &MockIStatusUsecase{ctrl: ctrl}
	mock.recorder = &MockIStatusUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStatusUsecase) EXPECT() *MockIStatusUsecaseMockRecorder {
	return m.recorder
}

// CreateStatus mocks base method.
func (m *MockIStatusUsecase) CreateStatus(ctx context.Context, status *models.Status) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStatus", ctx, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStatus indicates an expected call of CreateStatus.
func (mr *MockIStatusUsecaseMockRecorder) CreateStatus(ctx, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStatus", reflect.TypeOf((*MockIStatusUsecase)(nil).CreateStatus), ctx, status)
}

// DeleteStatus mocks base method.
func (m *MockIStatusUsecase) DeleteStatus(ctx context.Context, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStatus", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStatus indicates an expected call of DeleteStatus.
func (mr *MockIStatusUsecaseMockRecorder) DeleteStatus(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStatus", reflect.TypeOf((*MockIStatusUsecase)(nil).DeleteStatus), ctx, id)
}

// GetStatuses mocks base method.
func (m *MockIStatusUsecase) GetStatuses(ctx context.Context) ([]*models.Status, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatuses", ctx)
	ret0, _ := ret[0].([]*models.Status)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatuses indicates an expected call of GetStatuses.
func (mr *MockIStatusUsecaseMockRecorder) GetStatuses(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatuses", reflect.TypeOf((*MockIStatusUsecase)(nil).GetStatuses), ctx)
}

// UpdateStatus mocks base method.
func (m *MockIStatusUsecase) UpdateStatus(ctx context.Context, status *models.Status) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatus", ctx, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStatus indicates an expected call of UpdateStatus.
func (mr *MockIStatusUsecaseMockRecorder) UpdateStatus(ctx, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatus", reflect.TypeOf((*MockIStatusUsecase)(nil).UpdateStatus), ctx, status)
}

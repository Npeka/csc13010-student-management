// Code generated by MockGen. DO NOT EDIT.
// Source: internal/status/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/csc13010-student-management/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStatusRepository is a mock of IStatusRepository interface.
type MockIStatusRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIStatusRepositoryMockRecorder
}

// MockIStatusRepositoryMockRecorder is the mock recorder for MockIStatusRepository.
type MockIStatusRepositoryMockRecorder struct {
	mock *MockIStatusRepository
}

// NewMockIStatusRepository creates a new mock instance.
func NewMockIStatusRepository(ctrl *gomock.Controller) *MockIStatusRepository {
	mock := &MockIStatusRepository{ctrl: ctrl}
	mock.recorder = &MockIStatusRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStatusRepository) EXPECT() *MockIStatusRepositoryMockRecorder {
	return m.recorder
}

// CreateStatus mocks base method.
func (m *MockIStatusRepository) CreateStatus(ctx context.Context, status *models.Status) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStatus", ctx, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStatus indicates an expected call of CreateStatus.
func (mr *MockIStatusRepositoryMockRecorder) CreateStatus(ctx, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStatus", reflect.TypeOf((*MockIStatusRepository)(nil).CreateStatus), ctx, status)
}

// DeleteStatus mocks base method.
func (m *MockIStatusRepository) DeleteStatus(ctx context.Context, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStatus", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStatus indicates an expected call of DeleteStatus.
func (mr *MockIStatusRepositoryMockRecorder) DeleteStatus(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStatus", reflect.TypeOf((*MockIStatusRepository)(nil).DeleteStatus), ctx, id)
}

// GetStatuses mocks base method.
func (m *MockIStatusRepository) GetStatuses(ctx context.Context) ([]*models.Status, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatuses", ctx)
	ret0, _ := ret[0].([]*models.Status)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatuses indicates an expected call of GetStatuses.
func (mr *MockIStatusRepositoryMockRecorder) GetStatuses(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatuses", reflect.TypeOf((*MockIStatusRepository)(nil).GetStatuses), ctx)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: internal/fileprocessor/usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// MockIFileProcessingUsecase is a mock of IFileProcessingUsecase interface.
type MockIFileProcessingUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIFileProcessingUsecaseMockRecorder
}

// MockIFileProcessingUsecaseMockRecorder is the mock recorder for MockIFileProcessingUsecase.
type MockIFileProcessingUsecaseMockRecorder struct {
	mock *MockIFileProcessingUsecase
}

// NewMockIFileProcessingUsecase creates a new mock instance.
func NewMockIFileProcessingUsecase(ctrl *gomock.Controller) *MockIFileProcessingUsecase {
	mock := &MockIFileProcessingUsecase{ctrl: ctrl}
	mock.recorder = &MockIFileProcessingUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFileProcessingUsecase) EXPECT() *MockIFileProcessingUsecaseMockRecorder {
	return m.recorder
}
